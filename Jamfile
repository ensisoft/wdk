
import os ;
import path ;
import common ;

lib X11     : : <name>X11  ;
lib Xcb     : : <name>xcb  ;
lib Xau     : : <name>Xau  ;
lib Xdmcp   : : <name>Xdmcp ;
lib Xxf86vm : : <name>Xxf86vm ;
lib Xext    : : <name>Xext ;
lib Xrandr  : : <name>Xrandr ;

path-constant GLES2_INC : "c:/imgtec_gles_sdk/Include" ;
path-constant GLES2_LIB : "c:/imgtec_gles_sdk/Lib" ;
path-constant BOOST_INC : "boost_1_51_0" ;

project wdk 
: requirements
  <toolset>gcc:<cflags>-std=c++11
  <toolset>gcc:<cflags>-Wno-deprecated-declarations
  <toolset>clang:<cflags>-std=c++11
  <os>NT:<include>$(GLES2_INC)
  <include>$(BOOST_INC)
  <include>../
: usage-requirements
  <toolset>gcc:<cflags>-std=c++11
  <toolset>clang:<cflags>-std=c++11
  <os>LINUX:<library>/wdk//Xxf86vm/<link>shared
  <os>LINUX:<library>/wdk//X11/<link>shared
  <os>LINUX:<library>/wdk//Xcb/<link>shared
  <os>LINUX:<library>/wdk//Xau/<link>shared
  <os>LINUX:<library>/wdk//Xdmcp/<link>shared
  <os>LINUX:<library>/wdk//Xext/<link>shared
  <os>LINUX:<library>/wdk//Xrandr/<link>shared
  ;

use-project /boost/ : $(BOOST_INC) ;

if [ os.name ] = LINUX
{
  lib EGL   : : <name>EGL ;
  lib GLES2 : : <name>GLESv2 ;
  lib GL    : : <name>GL ;

  # boost.build wont let same source file be built with same default
  # virtual target name by multiple build targets (read libraries)
  # so we must use the obj rule to define an alternate target name for the source

  local mobile_sources = [ glob *.cpp ] [ glob X11/*.cpp ] [ glob EGL/*.cpp ] ;
  local mobile_objects ;  
  for local source in $(mobile_sources)
  {
     mobile_objects += [ obj $(source:B)_egl : $(source) : <define>WDK_MOBILE ] ;
  }

  lib wdk-mobile : $(mobile_objects) : <link>static ;
  lib wdk-desktop : [ glob *.cpp ] [ glob X11/*.cpp ] [ glob GLX/*.cpp ] : <link>static ;

}

if [ os.name ] = NT
{
  lib EGL   : : <name>libEGL <search>$(GLES2_LIB) ;
  lib GLES2 : : <name>libGLESv2 <search>$(GLES2_LIB) ;
  lib GL    : : <name>opengl32 ;

  local mobile_sources = [ glob *.cpp ] [ glob win32/*.cpp ] [ glob EGL/*.cpp ] ;
  local mobile_objects ;
  for local source in $(mobile_sources)
  {
     mobile_objects += [ obj $(source:B)_egl : $(source) : <define>WDK_MOBILE ] ;  
  }

  lib wdk-mobile  : $(mobile_objects) : <link>static ;
  lib wdk-desktop : [ glob *.cpp ] [ glob win32/*.cpp ] [ glob WGL/*.cpp ] : <link>static ;

}

local headers = [ glob *.h : utf8.h utility.h ] ;

install include/wdk : $(headers) ;

#build-project sample ;
